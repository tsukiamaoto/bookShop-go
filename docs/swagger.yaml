definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  http.dataResponse:
    properties:
      data: {}
    type: object
  model.CartItem:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      product:
        $ref: '#/definitions/model.Product'
      productID:
        type: integer
      quantity:
        type: integer
      updatedAt:
        type: string
    type: object
  model.Category:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      images:
        items:
          type: string
        type: array
      inventory:
        type: integer
      price:
        type: integer
      type:
        type: string
      updatedAt:
        type: string
    type: object
  model.Order:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      oderItems:
        items:
          $ref: '#/definitions/model.OrderItem'
        type: array
      total:
        type: integer
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/model.User'
      userID:
        type: integer
    type: object
  model.OrderItem:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      product:
        $ref: '#/definitions/model.Product'
      productID:
        type: integer
      quantity:
        type: integer
      updatedAt:
        type: string
    type: object
  model.Product:
    properties:
      categories:
        items:
          $ref: '#/definitions/model.Category'
        type: array
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  model.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /cart:
    get:
      consumes:
      - application/json
      description: get cart item list by user id
      produces:
      - application/json
      responses:
        "200":
          description: get cartItems
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.CartItem'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get CartItem List
      tags:
      - Cart
    post:
      consumes:
      - application/json
      description: add cart item by user id
      parameters:
      - in: formData
        name: createdAt
        type: string
      - in: formData
        name: description
        type: string
      - in: formData
        name: id
        type: integer
      - in: formData
        name: name
        type: string
      - in: formData
        name: updatedAt
        type: string
      - description: quantity
        in: formData
        name: quantity
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Added cartItem successfully!
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add CartItem
      tags:
      - Cart
  /cart/:cartItemId:
    delete:
      consumes:
      - application/json
      description: delete cart item by cart item id
      parameters:
      - description: cartItem id
        in: path
        name: cartItemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted cartItem successfully!
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete CartItem
      tags:
      - Cart
    put:
      consumes:
      - application/json
      description: updated cart item by cart item id
      parameters:
      - description: cartItem id
        in: path
        name: cartItemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Updated cartItem successfully!
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update CartItem
      tags:
      - Cart
  /order:
    get:
      consumes:
      - application/json
      description: get order by user id
      produces:
      - application/json
      responses:
        "200":
          description: get the order
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.Order'
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Order
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: add order item by user id
      produces:
      - application/json
      responses:
        "200":
          description: Created orderItem successfully!
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add OrderItem
      tags:
      - Order
  /product:
    get:
      consumes:
      - application/json
      description: get product list
      produces:
      - application/json
      responses:
        "200":
          description: get products
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Product'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get ProductList
      tags:
      - Product
  /product/:productId:
    get:
      consumes:
      - application/json
      description: get product by product id
      produces:
      - application/json
      responses:
        "200":
          description: get the product
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.Product'
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Product
      tags:
      - Product
  /seller:
    get:
      consumes:
      - application/json
      description: get product list by user id
      produces:
      - application/json
      responses:
        "200":
          description: get products
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Product'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Product List
      tags:
      - Seller
    post:
      consumes:
      - application/json
      description: add product by user id
      parameters:
      - description: name
        in: formData
        name: name
        required: true
        type: string
      - description: description
        in: formData
        name: description
        required: true
        type: string
      - in: formData
        name: createdAt
        type: string
      - in: formData
        name: id
        type: integer
      - in: formData
        items:
          type: string
        name: images
        type: array
      - in: formData
        name: inventory
        type: integer
      - in: formData
        name: price
        type: integer
      - in: formData
        name: type
        type: string
      - in: formData
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Created new product successfully!
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add Product
      tags:
      - Seller
  /seller/:productId:
    delete:
      consumes:
      - application/json
      description: delete product by user id
      parameters:
      - description: product id
        in: path
        name: productId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted new product successfully!
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete Product
      tags:
      - Seller
    put:
      consumes:
      - application/json
      description: update product
      parameters:
      - description: name
        in: formData
        name: name
        required: true
        type: string
      - description: description
        in: formData
        name: description
        required: true
        type: string
      - in: formData
        name: createdAt
        type: string
      - in: formData
        name: id
        type: integer
      - in: formData
        items:
          type: string
        name: images
        type: array
      - in: formData
        name: inventory
        type: integer
      - in: formData
        name: price
        type: integer
      - in: formData
        name: type
        type: string
      - in: formData
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Updated the product successfully!
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update Product
      tags:
      - Seller
  /user:
    get:
      consumes:
      - application/json
      description: get user list
      produces:
      - application/json
      responses:
        "200":
          description: get users
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.User'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get User List
      tags:
      - User
  /user/:id:
    delete:
      consumes:
      - application/json
      description: delete user by user id
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted user successfully
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: get user by user id
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: get the user
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: update user by user id
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: username
        in: formData
        name: username
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Updated user successfully!
          schema:
            allOf:
            - $ref: '#/definitions/http.dataResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update User
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: username
        in: formData
        name: username
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: isLogined is true
          schema:
            allOf:
            - type: object
            - properties:
                isLogined:
                  type: boolean
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: login
      tags:
      - User
  /user/logout:
    post:
      consumes:
      - application/json
      description: logout by session userid
      produces:
      - application/json
      responses:
        "200":
          description: isLogined is false
          schema:
            allOf:
            - type: object
            - properties:
                isLogined:
                  type: boolean
              type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: logout
      tags:
      - User
swagger: "2.0"
